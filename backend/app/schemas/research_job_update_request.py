# coding: utf-8

"""
    DRKR API

    A sample OpenAPI specification for the DRKR project, covering all endpoint stubs across authentication, users, organizations, deep research items, tags, comments, ratings, research jobs, and search. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

from app.schemas._base_model import CustomBaseModel

class ResearchJobUpdateRequest(CustomBaseModel):
    """
    ResearchJobUpdateRequest
    """ # noqa: E501
    visibility: Optional[StrictStr] = None
    status: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["visibility", "status"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": False,
        "protected_namespaces": (),
    }

    @field_validator("status")
    def validate_status(cls, v):
        if v is not None and v not in ["pending_answers", "running", "completed", "failed", "cancelled"]:
            raise ValueError("Invalid status")
        return v
    
    @field_validator("visibility")
    def validate_visibility(cls, v):
        if v is not None and v not in ["private", "public", "org"]:
            raise ValueError("Invalid visibility")
        return v


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))



