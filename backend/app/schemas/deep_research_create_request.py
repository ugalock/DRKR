# coding: utf-8

"""
    DRKR API

    A sample OpenAPI specification for the DRKR project, covering all endpoint stubs across authentication, users, organizations, deep research items, tags, comments, ratings, research jobs, and search. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

from app.schemas._base_model import CustomBaseModel

class DeepResearchCreateRequest(CustomBaseModel):
    """
    DeepResearchCreateRequest
    """ # noqa: E501
    title: Optional[StrictStr] = None
    prompt_text: Optional[StrictStr] = None
    final_report: Optional[StrictStr] = None
    visibility: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["title", "prompt_text", "final_report", "visibility"]

    @field_validator('visibility')
    def visibility_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ('public', 'private', 'org',):
            raise ValueError("must be one of enum values ('public', 'private', 'org')")
        return value

    model_config = {
        "populate_by_name": True,
        "validate_assignment": False,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))



